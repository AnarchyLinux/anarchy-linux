#!/bin/sh
# Main Anarchy Linux installer script

set -e

ANARCHY_INSTALL_PATH="$(pwd)"
ANARCHY_CONFIG_FILE="${ANARCHY_INSTALL_PATH}"/configs/anarchy.conf

# Source Anarchy's config file
# shellcheck source=../configs/anarchy.conf
. "${ANARCHY_CONFIG_FILE}"

# Source the chosen (or default) translation
# shellcheck source=../translations/
. "${language_file}"

# Define log file
ANARCHY_LOG_FILE="${ANARCHY_LOG_PATH}/$(date '+%d-%m-%Y')".log

# Source libraries
for library in "${ANARCHY_LIBRARIES_PATH}"/*; do
    # shellcheck source=../libraries/
    . "${library}"
done

# Check if the terminal is big enough to add battery info
if [ "$(tput lines)" -gt 25 ]; then
    set_var 'sufficient_screen_size' 'true'
fi

main() {
    # Check for root privileges
    if [ "$(id -u)" -ne 0 ]; then
        echo "Error: anarchy requires root privileges"
        echo "       Use: sudo anarchy"
        exit 1
    fi

    log "Started installation"

    . set-keyboard-layout

    # Show wifi connection menu if user is not already connected to the internet
    if ! . check-connection; then
        . connect-to-wifi
    fi

    . update-mirrorlist
    #. test-connection # TODO: Remove it, it's not needed anymore
    . install-yay
    . set-locale
    . set-timezone
    ### OSTOU PRI prepare-disks(7), seti ok_screen_size
    #. prepare-disks
    #. choose-installation-options
    #. set-hostname
    #. set-password
    #. set-user
    #. add-software
    #. install-base
    #. configure-system -> configure-desktop-additions
    #. add-user
    #. reboot-menu
}

# Prints the usage info
usage() {
    echo "Usage: anarchy [-h][-k][-u]"
    echo "    -h    Display this message"
    echo "    -k    Update pacman's keys"
    echo "    -u    Update Anarchy's scripts"
    echo ""
}

if [ $# -lt 1 ]; then
    # If no parameters were passed, start the installation
    main
else
    while getopts ":kuh" opt; do
        case "${opt}" in
            k) . update-pacman-keys ;;
            u) . update-anarchy ;;
            h) usage ;;
            *) usage; exit 1 ;;
        esac
    done
fi
